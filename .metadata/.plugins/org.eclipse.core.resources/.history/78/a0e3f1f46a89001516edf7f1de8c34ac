
public class Converter {
	
	static String hexValues = "0123456789ABCDEF";		// String som brukes til å definerer tallverdier for karakterene
	
	public static int hexToInt(String hex) {
		
		if (hex.length() > 6) throw new IllegalArgumentException();		// Sjekker om stringen som kommer inn er for lang, kaster IllegalArgumentException.
		
		else {
			for (int i = 0; i < hex.length(); i++)		// Sjekker om en karakter i stringen er en hexadecimal karakter, hvis ikke kastest IllegalArgumentException 
				if (Character.digit(hex.charAt(i), 16) == -1) 
					throw new IllegalArgumentException();
			
			
			int counter = hex.length() -1;			// Lengde på hex-verdi
			int sum = 0;							// int som skal returneres, hvis hex stringen er tom vil det returneres 0
			
		
			for (char c : hex.toCharArray()) {			// Går gjennom alle verdiene som sendes inn
				char d = Character.toUpperCase(c);		// Gjør om hver karakter til upperCase, slik at koden finner den i hexValues
				int i = hexValues.indexOf(d);			// "konverterer" verdiene til tallverdien de har i posisjonen i stringen
				sum = (int) (sum + (Math.pow(16, counter))*i);	// Bruker Math.pow til å regne ut desimal-verdien av hex-verdien
				counter--;
			}
			return sum;	
		}
	}
	

	/** Metode for å konvertere en Bit-string til en int verdi */
	public static int bitToInt(String binary) {
		
		if (binary.length() > 24) throw new IllegalArgumentException();		// Sjekker lengden på bit stringen
	    for (int i = 0; i < binary.length(); i++)							// Sjekker om andre tegn enn 0 og 1 sendes inn
	    	if (Character.digit(binary.charAt(i), 2) == -1)
	    		throw new IllegalArgumentException();
		
	    char[] numbers = binary.toCharArray();		// Lager et array av stringen med bit-verdier
	    int result = 0;								// Variabel som returneres, returnerer 0 hvis String binary er en tom string
	    
	    for(int i = numbers.length - 1; i >= 0; i--)	// For-løkke som går gjennom bit-stringen og bruker Math.pow til å regne ut verdien
	        if(numbers[i]=='1')
	            result += Math.pow(2, (numbers.length-i - 1));
	    return result;
	}

}
